version: '3.4'

x-common: &common
  stdin_open: true
  tty: true
  restart: unless-stopped
  networks:
    - project

x-django-build: &django-build
  build:
    context: .
    dockerfile: ./Dockerfile.dev

services:

  celery:
    <<: *django-build
    container_name: project-cc01
    command: bash -c "celery -A project worker -l info"
    depends_on:
      - django
      - redis
    env_file:
      - ./config/env/dev/.django
    volumes:
      - .:/code/
    <<: *common

  celery_beat:
    <<: *django-build
    container_name: project-cb01
    command: bash -c "celery -A project beat -l info"
    depends_on:
      - django
      - redis
    env_file:
      - ./config/env/dev/.django
    volumes:
      - .:/code/
    <<: *common

  django:
    <<: *django-build
    container_name: project-dc01
    command: bash -c "python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    env_file:
      - ./config/env/dev/.django
    volumes:
      - ./:/code
      - project_static_volume:/code/static
      - project_media_volume:/code/media
    depends_on:
      - postgres
    <<: *common

  flower:
    image: mher/flower:0.9.7
    container_name: project-fc01
    command: [ "flower", "--broker=redis://redis:6379/0", "--broker_api=redis://redis:6379/0", "--port=5555" ]
    ports:
      - 5555:5555
    <<: *common

  postgres:
    image: postgres:13.3-buster
    container_name: project-pc01
    env_file:
      - ./config/env/dev/.postgres
    ports:
      - 5432:5432
    volumes:
      - project_postgres_data:/var/lib/postgresql/data/
    <<: *common

  redis:
    image: redis:6.2-buster
    container_name: project-rc01
    volumes:
      - project_redis_data:/data
    <<: *common

networks:
  project:
    driver: bridge

volumes:
  project_postgres_data:
  project_redis_data:
  project_static_volume:
  project_media_volume:
